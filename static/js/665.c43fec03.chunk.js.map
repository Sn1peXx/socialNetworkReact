{"version":3,"file":"static/js/665.c43fec03.chunk.js","mappings":"6MAEaA,EAAe,SAACC,GACzB,OAAOA,EAAMC,UAAUC,OAGdC,EAAiB,SAACH,GAC3B,OAAOA,EAAMC,UAAUG,aAGdC,EAAc,SAACL,GACxB,OAAOA,EAAMC,UAAUK,YAGdC,EAAe,SAACP,GACzB,OAAOA,EAAMC,UAAUO,qB,oBCd3B,EAA8B,2BAA9B,EAAsE,0BAAtE,EAA4G,yBAA5G,EAAkJ,0BAAlJ,EAAwL,yBAAxL,EAA+N,2BAA/N,EAA0Q,6BAA1Q,EAAqT,2BAArT,EAA4V,yB,SCkE5V,EAjD6B,SAAC,GAAuE,IAAtEN,EAAqE,EAArEA,MAAOM,EAA8D,EAA9DA,oBAAqBC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,kBAEnEC,EAAUV,EAAMW,KAAI,SAAAC,GAEtB,OACI,iBAAKC,UAAWC,EAAhB,WACI,iBAAKD,UAAWC,EAAhB,WACG,UAAC,KAAD,CAASC,GAAI,YAAcH,EAAKI,GAAhC,WACI,gBACIC,IAA2B,OAAtBL,EAAKM,OAAOC,MAAiBP,EAAKM,OAAOC,MAAQC,EACtDC,IAAI,cACJR,UAAWC,IAJnB,KAKO,qBAGFF,EAAKU,UACD,mBACIC,SAAUjB,EAAoBkB,MAAK,SAAAR,GAAE,OAAIA,IAAOJ,EAAKI,MACrDH,UAAWC,EACXW,QAAS,kBAAMlB,EAASK,EAAKI,KAHjC,2EAOA,mBACIO,SAAUjB,EAAoBkB,MAAK,SAAAR,GAAE,OAAIA,IAAOJ,EAAKI,MACrDH,UAAWC,EACXW,QAAS,kBAAMjB,EAAOI,EAAKI,KAH/B,oFASZ,iBAAKH,UAAWC,EAAhB,WACI,eAAID,UAAWC,EAAf,SAAqCF,EAAKc,QAC1C,cAAGb,UAAWC,EAAd,SAAsCF,EAAKe,OAASf,EAAKe,OAAS,qCAClE,eAAGd,UAAWC,EAAd,UAAwC,wBAAxC,SAAoE,6BA9BjCF,EAAKI,OAoCxD,OACI,2BACKN,GACD,mBAAQe,QAAShB,EAAmBI,UAAWC,EAA/C,sD,UCEZ,GAAec,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAXoB,SAAC/B,GACrB,MAAO,CACHE,MAAOH,EAAaC,GACpBI,YAAaD,EAAeH,GAC5BM,WAAYD,EAAYL,GACxBQ,oBAAqBD,EAAaP,MAMb,CAACgC,SAAAA,EAAAA,GAAUtB,OAAAA,EAAAA,GAAQD,SAAAA,EAAAA,KADhD,EApCsC,SAACwB,IAEnCC,EAAAA,EAAAA,YAAU,WACND,EAAMD,aACP,IAMH,OACI,8BACKC,EAAM3B,YAAa,SAAC6B,EAAA,EAAD,KAChB,SAAC,EAAD,CACIxB,kBARU,WACtBsB,EAAMD,YAQM9B,MAAO+B,EAAM/B,MACbQ,OAAQuB,EAAMvB,OACdD,SAAUwB,EAAMxB,SAChBD,oBAAqByB,EAAMzB","sources":["Redux/Selectors/userSelector.js","webpack://social_network/./src/Component/Users/User/Users.module.css?df3b","Component/Users/User/Users.tsx","Component/Users/UsersContainer.tsx"],"sourcesContent":["// Делаем mapToProps более гибким\n\nexport const getUsersPage = (state) => {\n    return state.usersPage.users;\n}\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n}\n\nexport const getFetching = (state) => {\n    return state.usersPage.isFetching;\n}\n\nexport const getFollowing = (state) => {\n    return state.usersPage.followingInProgress;\n}","// extracted by mini-css-extract-plugin\nexport default {\"user_avatar\":\"Users_user_avatar__2Zy9W\",\"user_block\":\"Users_user_block__HqQq7\",\"user_left\":\"Users_user_left__sc2Sa\",\"user_right\":\"Users_user_right__71a1+\",\"user_name\":\"Users_user_name__4foG3\",\"user_status\":\"Users_user_status__SoJAi\",\"user_location\":\"Users_user_location__dPST1\",\"user_follow\":\"Users_user_follow__0D2+q\",\"user_more\":\"Users_user_more__3zfm+\",\"loading\":\"Users_loading__aBEdC\"};","import {FC} from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\n// @ts-ignore\nimport avatar from \"../../../resources/customers.png\";\n// @ts-ignore\nimport userStyle from './Users.module.css'\nimport {userType} from \"../../../Redux/usersReducer\";\n\n\ntype PropsType = {\n    users: Array<userType>,\n    followingInProgress: number[],\n    unfollow: (id: number) => void,\n    follow: (id: number) => void,\n    updateCurrentPage: () => void\n}\n\nconst Users: FC<PropsType> = ({users, followingInProgress, unfollow, follow, updateCurrentPage}) => {\n\n    const content = users.map(item => {\n\n        return (\n            <div className={userStyle.user_block} key={item.id}>\n                <div className={userStyle.user_left}>\n                   <NavLink to={'/profile/' + item.id}>\n                       <img\n                           src={item.photos.small !== null ? item.photos.small : avatar}\n                           alt=\"user avatar\"\n                           className={userStyle.user_avatar}\n                       /> <br/>\n                   </NavLink>\n                    {\n                        item.followed ?\n                            <button\n                                disabled={followingInProgress.some(id => id === item.id)}\n                                className={userStyle.user_follow}\n                                onClick={() => unfollow(item.id)}\n\n                            >Отписаться</button> :\n\n                            <button\n                                disabled={followingInProgress.some(id => id === item.id)}\n                                className={userStyle.user_follow}\n                                onClick={() => follow(item.id)}\n\n                            >Подписаться</button>\n\n                    }\n                </div>\n                <div className={userStyle.user_right}>\n                    <h4 className={userStyle.user_name}>{item.name}</h4>\n                    <p className={userStyle.user_status}>{item.status ? item.status : 'В сети'}</p>\n                    <p className={userStyle.user_location}>{\"item.location.country\"} · {\"item.location.city\"}</p>\n                </div>\n            </div>\n        )\n    })\n\n    return (\n        <div>\n            {content}\n            <button onClick={updateCurrentPage} className={userStyle.user_more}>Дальше</button>\n        </div>\n    )\n}\n\nexport default Users;","import {FC, useEffect} from \"react\";\nimport {compose} from \"redux\";\n// @ts-ignore\nimport Preloader from \"../Common/Preloader/Preloader.tsx\";\nimport {connect} from \"react-redux\";\nimport {getCurrentPage, getFetching, getFollowing, getUsersPage} from \"../../Redux/Selectors/userSelector\";\nimport {AppStateType} from \"../../Redux/reduxStore\";\n\n// @ts-ignore\nimport Users from \"./User/Users.tsx\";\n\nimport {\n    follow,\n    getUsers,\n    unfollow, userType,\n    // @ts-ignore\n} from \"../../Redux/usersReducer.ts\";\n\n\ntype PropsType = {\n    isFetching: boolean,\n    getUsers: () => void,\n    users: userType[],\n    follow: () => void,\n    unfollow: () => void,\n    followingInProgress: number[]\n}\n \nconst UsersContainer: FC<PropsType> = (props) => {\n\n    useEffect(() => {\n        props.getUsers();\n    }, []);\n\n    const updateCurrentPage = () => {\n        props.getUsers();\n    }\n\n    return (\n        <>\n            {props.isFetching ? <Preloader/> :\n                <Users\n                    updateCurrentPage={updateCurrentPage}\n                    users={props.users}\n                    follow={props.follow}\n                    unfollow={props.unfollow}\n                    followingInProgress={props.followingInProgress}\n                />\n            }\n        </>\n    )\n\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        users: getUsersPage(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getFetching(state),\n        followingInProgress: getFollowing(state)\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, {getUsers, follow, unfollow})\n)(UsersContainer)"],"names":["getUsersPage","state","usersPage","users","getCurrentPage","currentPage","getFetching","isFetching","getFollowing","followingInProgress","unfollow","follow","updateCurrentPage","content","map","item","className","userStyle","to","id","src","photos","small","avatar","alt","followed","disabled","some","onClick","name","status","compose","connect","getUsers","props","useEffect","Preloader"],"sourceRoot":""}