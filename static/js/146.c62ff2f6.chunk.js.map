{"version":3,"file":"static/js/146.c62ff2f6.chunk.js","mappings":"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","sources":["webpack://social_network/./src/Component/Login/Login.module.css?536a","Component/Login/Form/LoginForm.tsx","Component/Login/Login.tsx","Component/Login/LoginContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"login_main\":\"Login_login_main__NnWXw\",\"login\":\"Login_login__4Qt0+\",\"login_title\":\"Login_login_title__nw57k\",\"input_login\":\"Login_input_login__IrYiH\",\"login_remember\":\"Login_login_remember__2zz8m\",\"login_checkbox\":\"Login_login_checkbox__gy-no\",\"login_btn\":\"Login_login_btn__ZlC9j\",\"error\":\"Login_error__EEjWj\",\"error_main\":\"Login_error_main__Z-jxa\",\"captcha_input\":\"Login_captcha_input__epnZr\"};","import * as React from \"react\";\nimport {useFormik} from \"formik\";\nimport * as Yup from 'yup';\n// @ts-ignore\nimport loginStyle from \"../Login.module.css\";\nimport {FC} from \"react\";\n\n\n\ntype LoginFormType = {\n    setAuthUserData: \n    (email: string,\n    password: string,\n    terms: boolean,\n    captcha: string) => void,\n    error: boolean,\n    captchaUrl: string\n}\n\nconst LoginForm: FC<LoginFormType> = ({setAuthUserData, error, captchaUrl}) => {\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            terms: false,\n            captcha: ''\n        },\n        validationSchema: Yup.object({\n            email: Yup.string().min(2, \"Минимум 2 символа\" ).required(\"Обязательное поле\"),\n            password: Yup.string().min(5, \"Минимум 5 символов\").required(\"Обязательное поле\"),\n            terms: Yup.boolean()\n        }),\n        onSubmit: values => {\n            setAuthUserData(values.email, values.password, values.terms, values.captcha);\n        }\n    })\n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n            <div className=\"login\">\n                <input\n                    className={loginStyle.input_login}\n                    id=\"email\"\n                    name=\"email\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    type=\"email\"\n                    placeholder={\"Введите логин\"}/>\n                {formik.errors.email && formik.touched.email ? <div className={loginStyle.error}>{formik.errors.email}</div> : null}\n                <br/>\n                <input\n                    type=\"password\"\n                    className={loginStyle.input_login}\n                    placeholder={\"Введите пароль\"}\n                    id={\"password\"}\n                    name={\"password\"}\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                />\n                {formik.errors.password && formik.touched.password ? <div className={loginStyle.error}>{formik.errors.password}</div> : null}\n                <br/>\n                <label className={loginStyle.login_remember}>\n                    <input\n                        className={loginStyle.login_checkbox}\n                        type=\"checkbox\"\n                        name={\"terms\"}\n                        // @ts-ignore\n                        value={formik.values.terms}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                    />\n\n                Запомнить меня</label>\n            </div>\n            {formik.errors.terms && formik.touched.terms ? <div className={loginStyle.error}>{formik.errors.terms}</div> : null}\n            {error ? <p className={loginStyle.error_main}>Неверный логин или пароль</p> : null}\n\n            {captchaUrl ? <img src={captchaUrl} alt='captcha'/> : null} <br/>\n            {captchaUrl\n                ? <input\n                    className={loginStyle.captcha_input}\n                    type=\"text\"\n                    name={\"captcha\"}\n                    value={formik.values.captcha}\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                />\n                : null}\n            <br/>\n            <button className={loginStyle.login_btn} type={\"submit\"} >Войти</button>\n\n        </form>\n    )\n}\n\nexport default LoginForm;","import * as React from \"react\";\nimport {Redirect} from \"react-router-dom\";\n\n// @ts-ignore\nimport loginStyle from './Login.module.css'\n// @ts-ignore\nimport LoginForm from \"./Form/LoginForm.tsx\";\nimport {FC} from \"react\";\n\ntype LoginType = {\n    isAuth: boolean,\n    error: string,\n    setAuthUserData: () => void,\n    captchaUrl: string\n}\n\nconst Login: FC<LoginType> = ({isAuth, error, setAuthUserData, captchaUrl}) => {\n\n    if (isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n\n    return (\n       <div className={loginStyle.login_main}>\n           <h1 className={loginStyle.login_title}>Войдите в свой аккаунт</h1>\n            <LoginForm setAuthUserData={setAuthUserData} error={error} captchaUrl={captchaUrl} />\n       </div>\n\n    )\n}\n\nexport default Login;","import * as React from \"react\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\n\n// @ts-ignore\nimport Login from \"./Login.tsx\";\nimport {getAuthError, getAuthInfo, getCapthcaUrl} from \"../../Redux/Selectors/authSelector\";\n// @ts-ignore\nimport {setAuthUserData} from \"../../Redux/authReducer.ts\";\n\n\nconst LoginContainer = (props) => {\n\n    return (\n        <Login setAuthUserData={props.setAuthUserData} isAuth={props.isAuth} error={props.error} captchaUrl={props.captchaUrl} />\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuth: getAuthInfo(state),\n        error: getAuthError(state),\n        captchaUrl:getCapthcaUrl(state)\n    }\n}\n\nexport default compose(connect(mapStateToProps, {setAuthUserData}))(LoginContainer);"],"names":["setAuthUserData","error","captchaUrl","formik","useFormik","initialValues","email","password","terms","captcha","validationSchema","Yup","min","required","onSubmit","values","handleSubmit","className","loginStyle","id","name","value","onChange","handleChange","onBlur","handleBlur","type","placeholder","errors","touched","src","alt","isAuth","to","compose","connect","state","getAuthInfo","getAuthError","getCapthcaUrl","props"],"sourceRoot":""}